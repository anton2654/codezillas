# Generated by Django 5.1.4 on 2025-04-14 17:20

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=255, unique=True)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('budget', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('calorie_norm', models.IntegerField(blank=True, null=True)),
                ('diet_type', models.CharField(blank=True, max_length=255, null=True)),
                ('allergies', models.TextField(blank=True, null=True)),
                ('food_preferences', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'User',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('category', models.CharField(max_length=255)),
                ('calories', models.IntegerField()),
                ('proteins', models.FloatField()),
                ('fats', models.FloatField()),
                ('carbohydrates', models.FloatField()),
                ('photo', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'ingredient',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('calories', models.IntegerField(blank=True, null=True)),
                ('proteins', models.FloatField(blank=True, null=True)),
                ('fats', models.FloatField(blank=True, null=True)),
                ('carbohydrates', models.FloatField(blank=True, null=True)),
                ('photo', models.CharField(max_length=255)),
                ('category', models.CharField(choices=[('Сніданки', 'Сніданки'), ('Обіди', 'Обіди'), ('Вечері', 'Вечері'), ('Десерти', 'Десерти'), ('Салати', 'Салати'), ('Гарніри', 'Гарніри'), ('Закуски', 'Закуски'), ('Снеки', 'Снеки'), ('Пісні страви', 'Пісні страви'), ('Перші страви', 'Перші страви'), ('Другі страви', 'Другі страви')], max_length=50)),
            ],
            options={
                'db_table': 'recipe',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Recipe_User',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('calories', models.IntegerField(blank=True, null=True)),
                ('proteins', models.FloatField(blank=True, null=True)),
                ('fats', models.FloatField(blank=True, null=True)),
                ('carbohydrates', models.FloatField(blank=True, null=True)),
                ('photo', models.CharField(max_length=255, null=True)),
                ('category', models.CharField(choices=[('Сніданки', 'Сніданки'), ('Обіди', 'Обіди'), ('Вечері', 'Вечері'), ('Десерти', 'Десерти'), ('Салати', 'Салати'), ('Гарніри', 'Гарніри'), ('Закуски', 'Закуски'), ('Снеки', 'Снеки'), ('Пісні страви', 'Пісні страви'), ('Перші страви', 'Перші страви'), ('Другі страви', 'Другі страви')], max_length=50)),
            ],
            options={
                'db_table': 'recipe_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ShoppingList',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('quantity', models.FloatField()),
                ('in_stock', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'shopping_list',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserMenu',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
            options={
                'db_table': 'user_menu',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RecipeIngredient',
            fields=[
                ('recipe', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='api.recipe')),
                ('quantity', models.FloatField()),
            ],
            options={
                'db_table': 'recipe_ingredient',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RecipeIngredientUser',
            fields=[
                ('recipe', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='api.recipe_user')),
                ('quantity', models.FloatField()),
            ],
            options={
                'db_table': 'recipe_user_ingredient',
                'managed': False,
            },
        ),
    ]
